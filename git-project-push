#!/bin/bash

#  git-project-push  -  E.B. Smith, September 2014

set -euo pipefail
IFS=$'\n'
scriptname=git-project-push

function usage() {
cat 1>&2 <<USAGE
$scriptname

   Pushes committed changes the current project branch of each tracked project in the ~/.git-projects file.

Usage:  $scriptname [ -h ]

   -h   Show this help.

   Exit code 1 if a project was updated, 0 otherwise.

USAGE
}


configfile=~/.git-projects
export debugging=false
bSilent=false


if [[ ${CLICOLOR:-0} == 1 && -t 1 ]]
then
    textBlue="\e[94m"
    textDarkBlue="\e[1m\e[34m"
    textRed="\e[31m"
    textNormal="\e[0m"
else
    textBlue=""
    textDarkBlue=""
    textRed=""
    textNormal=""
fi


userpathlen=~
userpathlen=$((${#userpathlen}+1))
function leftTruncatePath() {
    local maxlength=$1
    local string="$2"

    string="${string:$userpathlen}"
    local length=${#string}
    if (( length <= maxlength ))
    then
        printf "%s" "${string}"
    else
        string="${string:(- $((maxlength-3)))}"
        printf "...%s" "${string}"
    fi
}

totalProjectCount=0
trackedProjectCount=0
dirtyProjectCount=0
function pushGitProjects() {
    while read -r nextline
    do {
        (( totalProjectCount++ )) || true
        local nextpref=${nextline%%:*}
        local nextpath="${nextline#*:}"

        if [[ "$nextpref" = "Y" ]]; then
            (( trackedProjectCount++ )) || true
            if [ -d "${nextpath}" ]
            then
                # echo "Checking $nextpath."
                cd "$(dirname "${nextpath}")"
                path=$(leftTruncatePath 47 "$(pwd)")
                status="$(git status -sb)"
                printf "${textBlue}~/%-47s${textNormal}%s\n" "${path}" "${status}" 1>&3
                if (( $(wc -l <<< "${status}") != 1 ))
                then
                    needsCommit=true
                else
                    needsCommit=false
                fi
                if [[ "${status}" == *ahead* ]] || [[ $needsCommit == true ]]
                then
                    (( dirtyProjectCount++ )) || true
                    if $needsCommit
                    then
                        if askYN "Commit and push changes?" </dev/tty
                        then
                            git add --all
                            git commit
                            git push
                            (git clean -df || true)
                        fi
                    else
                        git push
                    fi
                fi
            else
                printf "${textRed}>>> No path for %s.${textNormal}\n" "${nextpath}" 1>&3
            fi
        fi
    } </dev/null
    done < "${configfile}"
}


if (( $# == 1 )) && [[ "$1" = "-h" ]]
then
    usage
    exit 0
fi

if (( $# != 0 ))
then
    printf "${textRed}>>> Error: Extraneous command line options.${textNormal}\n" 1>&2
    exit 0
fi

if $bSilent
then
    exec 3> /dev/null
else
    exec 3>&1
fi

pushGitProjects

printf "${textDarkBlue}Found $totalProjectCount projects, checked $trackedProjectCount projects, $dirtyProjectCount with changes.${textNormal}\n" 1>&3

if (( dirtyProjectCount > 0 ))
then
    exit 1
else
    exit 0
fi
